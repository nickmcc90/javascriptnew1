'some' + 'more'
'somemore'
This is the result in the console window.


typeof 2
'number'
This function tells us the type of value.

'hello' + 3
'hello3'
Concatenation converts everything into a string.

What if we wanted to do math with strings....

'$' + 20.95 + 7.99
'$20.957.99'
This doesn't look right.
We have to put the numbers in parenthesis.

'$' + (2095 + 799) / 100

Let's write out the code for the item line...

'Items (' + (1+1) + '): $' + (2095+799 / 100)
'Items (2): $28.94'


<!-- Timestamp: 1:00:54 boutta learn the third type of string. -->

There's 3 types of strings...

''    Single
""    Double
"I'm"   Single and double

Escape character -> \'
"I\'m learning JavaScript"
"I'm learning JavaScript"


\n creates a new line.

alert('some\ntext')


Strings created with backticks ` are called template strings. They allow us to add things inside the string, like math.
`Items (${1 + 1}): $${(2095+799) / 100}`    Be sure to add the curly brackets. This is cleaner than concatenation.

Multiple line strings are only available with template strings
`some
text`
"some\ntext"


DONT FORGET TO PUT THE DOLLAR SIGN IN FRONT OF THE CURLY BRACKETS.


All in all, use single quotes for everything unless you need to interpolate something. Then use ``.

Example:
alert(`Total cost: $${((295+599)/100)}
Thank you, come again!`)

Example:
`Estimated tax (10%): $${Math.round(((2095*2+799*2) + (499*2)) * 0.1) / 100}`